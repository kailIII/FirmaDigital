/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ec.gov.informatica.firmadigital.applet;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.nio.ByteBuffer;
import java.nio.channels.FileChannel;
import java.util.ArrayList;
import java.util.List;

import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

import com.sun.pdfview.PDFFile;
import com.sun.pdfview.PDFPage;

import ec.gov.informatica.firmadigital.DatosUsuario;
import ec.gov.informatica.firmadigital.FirmaDigital;
import ec.gov.informatica.firmadigital.JerseyClient;
import ec.gov.informatica.firmadigital.PdfRow;
import ec.gov.informatica.firmadigital.ResumenRow;

/**
 *
 * @author hp1
 */
public class Login extends javax.swing.JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private javax.swing.JLabel claveLabel;
    private javax.swing.JTextField claveTextField;
    private javax.swing.JTabbedPane dataGridTab;
    private javax.swing.JButton firmarButton;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton loginButton;
    private javax.swing.JScrollPane pdfViewerTab;
    private javax.swing.JButton sincronizarButton;
    private javax.swing.JPanel tabPanel;
    private javax.swing.JTextField nombreTextField;
    private javax.swing.JTextField apellidoTextField;
    private javax.swing.JTextField cedulaTextField;
    private javax.swing.JTextField institucionTextField;
    private javax.swing.JLabel datosInformativosLabel;
    private javax.swing.JLabel nombreLabel;
    private javax.swing.JLabel apellidoLabel;
    private javax.swing.JLabel cedulaLabel;
    private javax.swing.JLabel institucionLabel;
    FirmaDigital firmaDigital = new FirmaDigital();
    DatosUsuario datosUsuario;
    JerseyClient jerseyClient = new JerseyClient();
    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        tabPanel = new javax.swing.JPanel();
        dataGridTab = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        pdfViewerTab = new javax.swing.JScrollPane();
        firmarButton = new javax.swing.JButton();
        sincronizarButton = new javax.swing.JButton();
        headerPanel = new javax.swing.JPanel();
        claveLabel = new javax.swing.JLabel();
        claveTextField = new javax.swing.JTextField();
        loginButton = new javax.swing.JButton();
        
        datosInformativosLabel=new JLabel();
        nombreLabel=new JLabel();
        apellidoLabel=new JLabel();
        cedulaLabel=new JLabel();
        institucionLabel=new JLabel();
        nombreTextField=new JTextField();
        apellidoTextField=new JTextField();
        cedulaTextField=new JTextField();
        institucionTextField=new JTextField();
        

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1=obtenerTablaResumne();
        
        
        jScrollPane1.setViewportView(jTable1);
        agregarVisualizador(pdfViewerTab, "C:\\Users\\hp1\\Dropbox\\Profesional\\aprendizaje\\1932394850JavaFirmado.pdf");
        dataGridTab.addTab("Documentos a Firmar", jScrollPane1);
        dataGridTab.addTab("Visor PDF", pdfViewerTab);

        javax.swing.GroupLayout tabPanelLayout = new javax.swing.GroupLayout(tabPanel);
        tabPanel.setLayout(tabPanelLayout);
        tabPanelLayout.setHorizontalGroup(
            tabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dataGridTab, javax.swing.GroupLayout.PREFERRED_SIZE, 769, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tabPanelLayout.setVerticalGroup(
            tabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dataGridTab, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
                .addContainerGap())
        );

        firmarButton.setText("Firmar");

        sincronizarButton.setText("Sincronizar");
        sincronizarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sincronizarButtonActionPerformed(evt);
            }
        });
        
        /*
         * Layout de datos informaticos
         */
        datosInformativosLabel.setText("Datos Informativos");
        nombreLabel.setText("Nombre:");
        apellidoLabel.setText("Apellido");
        cedulaLabel.setText("Cédula:");
        institucionLabel.setText("Institución");
        nombreTextField.setText("");
        apellidoTextField.setText("");
        cedulaTextField.setText("");
        institucionTextField.setText("");
        
        
        /*
         * /Layout de datos informaticos
         */
        

        claveLabel.setText("Clave de Firma Digital");

        claveTextField.setText("");
        claveTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                claveTextFieldActionPerformed(evt);
            }
        });

        loginButton.setText("Autenticar");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addGap(162, 162, 162)
                .addComponent(claveLabel)
                .addGap(18, 18, 18)
                .addComponent(claveTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(loginButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        headerPanelLayout.setVerticalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerPanelLayout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(claveLabel)
                    .addComponent(claveTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loginButton))
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(sincronizarButton)
                        .addGap(18, 18, 18)
                        .addComponent(firmarButton)
                        .addGap(18, 18, 18))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tabPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firmarButton)
                    .addComponent(sincronizarButton))
                .addContainerGap())
        );

        pack();
//        agregarVisualizador(this);
    }// </editor-fold>                        

    private void sincronizarButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        // TODO add your handling code here:
    }                                                 

    private void claveTextFieldActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:
    }                                              

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    	DatosUsuario datosUsuario=firmaDigital.login(claveTextField.getText());
    	if(datosUsuario!=null){
    		JOptionPane.showMessageDialog(null, "Correcto");
    	}else{
    		JOptionPane.showMessageDialog(null, "Incorrecto");
    	}
    }                                           

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
        	UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                	
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            	new Login().setVisible(true);
            	
            	
            	
                
            }
        });
    }
    
    public JTable obtenerTablaResumne(){
    	JTable jTable = new JTable();
    	List<ResumenRow> resumenRows = new  ArrayList<>();
    	resumenRows= jerseyClient.getResumenRows();
    	Object [][] tableData= new Object[resumenRows.size()][4];
    	int i=0;
    	for(ResumenRow resumenRow:resumenRows){
    		tableData[i][0]= resumenRow.getPrProcesos_id();
    		tableData[i][1]= resumenRow.getPrProcesos_nombre();
    		
    		tableData[i][2]= 5;
    		tableData[i][3]= "Seleccionar Proceso";
    		i++;
    	}
    	String[] titulosTabla=new String [] {"Cod", "Nombre", "Cantidad", "Seleccionar"};
    	jTable1.setModel(new javax.swing.table.DefaultTableModel(tableData, titulosTabla));
    	Action delete = new AbstractAction()
        {
            public void actionPerformed(ActionEvent e)
            {
//                JTable table = (JTable)e.getSource();
                int modelRow = Integer.valueOf( e.getActionCommand() );
                e.setSource(obtenerTablaPdf(modelRow));
                
//                ((DefaultTableModel)table.getModel()).removeRow(modelRow);
            }
        };
        ButtonColumn buttonColumn = new ButtonColumn(jTable1, delete, 3);
        buttonColumn.setMnemonic(KeyEvent.VK_D);
    	return jTable1;
    }
    
    public JScrollPane agregarVisualizador(JScrollPane jScrollPane, String direccionPDF){
    	try {
			long heapSize = Runtime.getRuntime().totalMemory();
			System.out.println("Heap Size = " + heapSize);

//			JFrame frame = new JFrame("PDF Prueba");
//			frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

			// load a pdf from a byte buffer}
//			String direccionPDF="C:\\Users\\hp1\\Dropbox\\Profesional\\aprendizaje\\1932394850JavaFirmado.pdf";
			File file = new File(direccionPDF);
			RandomAccessFile raf = new RandomAccessFile(file, "r");
			FileChannel channel = raf.getChannel();
			ByteBuffer buf = channel.map(FileChannel.MapMode.READ_ONLY, 0,
					channel.size());
			final PDFFile pdffile = new PDFFile(buf);
			PdfViewer pdfViewer = new PdfViewer();
			pdfViewer.setPDFFile(pdffile);
			pdfViewer.setDireccionPDF(direccionPDF);
//			FirmaDigital firmaDigital = new FirmaDigital();
//			firmaDigital.verificar(pdfViewer.getDireccionPDF());
//			pdfViewer.obtenerFirmas();
			JerseyClient webServiceLink = new JerseyClient();
//			System.out.println(webServiceLink.getToken());
//			webServiceLink.getPdfRows();
			jScrollPane.setViewportView(pdfViewer);
//			jScrollPane.pack();
//			jScrollPane.setVisible(true);

			PDFPage page = pdffile.getPage(0);
			pdfViewer.getPagePanel().showPage(page);
			System.out.println("acabando");
			return jScrollPane;
		} catch (IOException e) {
			e.printStackTrace();
			System.out.println("NO hay los archivos");
			return null;
		} 
    }
    
    public JTable obtenerTablaPdf(Integer idProceso){
    	JTable jTable = new JTable();
    	List<PdfRow> pdfRows = new  ArrayList<>();
    	pdfRows= jerseyClient.getPdfRows(idProceso);
    	Object [][] tableData= new Object[pdfRows.size()][6];
    	int i=0;
    	for(PdfRow pdfRow:pdfRows){
    		
    		
    		tableData[i][0]= pdfRow.getNomProceso();
    		tableData[i][1]= pdfRow.getPaso();
    		tableData[i][2]= pdfRow.getNomDemandado();
    		tableData[i][3]= pdfRow.getNomPdf();
    		tableData[i][4]= pdfRow.getIdPdf();
    		tableData[i][5]= false;
    		i++;
    	}
    	String[] titulosTabla=new String [] {"Proceso", "Paso", "Demandado", "Nombre PDF", "Visualizar","Seleccionar para Firmar"};
    	jTable1.setModel(new javax.swing.table.DefaultTableModel(tableData, titulosTabla));
    	Action delete = new AbstractAction()
        {
            public void actionPerformed(ActionEvent e)
            {
            	
                JTable table = (JTable)e.getSource();
                int modelRow = Integer.valueOf( e.getActionCommand() );
                ((DefaultTableModel)table.getModel()).getValueAt(modelRow, 4);
                
                String nomProceso=(String)((DefaultTableModel)table.getModel()).getValueAt(modelRow, 0);
            	String paso=(String)((DefaultTableModel)table.getModel()).getValueAt(modelRow, 1);
            	String nomDemandado=(String)((DefaultTableModel)table.getModel()).getValueAt(modelRow, 2);
            	int idPdf=(Integer)((DefaultTableModel)table.getModel()).getValueAt(modelRow, 4);
            	String nomPdf=(String)((DefaultTableModel)table.getModel()).getValueAt(modelRow, 3);
            	
                agregarVisualizador(pdfViewerTab, nomProceso+"-"+paso+"-"+nomDemandado+"-"+idPdf+"-"+nomPdf);
                dataGridTab.setSelectedIndex(1);
            }
        };
//        ButtonColumn buttonColumnVisualizar = new ButtonColumn(jTable1, delete, 4);
        ButtonColumn buttonColumnSeleccionar = new ButtonColumn(jTable1, delete, 4);
//        buttonColumnVisualizar.setMnemonic(KeyEvent.VK_D);
        buttonColumnSeleccionar.setMnemonic(KeyEvent.VK_D);
        jTable1.getColumnModel().getColumn( 5 ).setCellEditor( new CeldaCheckBox() );
        //para pintar la columna con el CheckBox en la tabla, en este caso, la primera columna
        jTable1.getColumnModel().getColumn( 5 ).setCellRenderer(new RenderCheckBox());      

    	return jTable1;
    }
         
}
